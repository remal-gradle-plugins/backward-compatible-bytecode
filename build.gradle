import index.jdk.GenerateJdkIndex

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

buildscript {
    String rootGroupId = project.ext.rootGroupId = "name.remal.gradle-plugins.${rootProject.name}"
    String rootArtifactId = project.ext.rootArtifactId = rootProject.name
    String rootSnapshotVersion = project.ext.rootSnapshotVersion = '0-SNAPSHOT'
    dependencies {
        //classpath("$rootGroupId:$rootArtifactId:$rootSnapshotVersion") { version { strictly(rootSnapshotVersion) } }
        classpath 'name.remal.gradle-plugins.toolkit:build-logic:0.73.3'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

allprojects {
    group = project.rootGroupId
    version = project.rootSnapshotVersion
}

apply plugin: 'name.remal.toolkit.build-logic'

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

subprojects {
    pluginManager.withPlugin('maven-publish') {
        publishing.publications.withType(MavenPublication).configureEach {
            artifactId = "${rootProject.name}-${project.name}"
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-gradle-plugin'

dependencies {
    optional 'org.ow2.asm:asm-util'

    api 'org.ow2.asm:asm-tree'
    api 'org.ow2.asm:asm-analysis'
}

gradlePlugin {
    plugins {
        'name.remal.backward-compatible-bytecode' {
            id = 'name.remal.backward-compatible-bytecode'
            implementationClass = 'name.remal.gradle_plugins.backward_compatible_bytecode.BackwardCompatibleBytecodePlugin'
            displayName = 'Make bytecode compatible with older JVM versions or library APIs'
            description = property('repository-description')
        }
    }
}

buildTimeConstants {
    property('plugin-id', gradlePlugin.plugins.named('name.remal.backward-compatible-bytecode').map { it.id })
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

tasks.register(GenerateJdkIndex.simpleName.uncapitalize(), GenerateJdkIndex) {
    minVersion = 11
}
